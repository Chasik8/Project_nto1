# Project_nto1
Это система безопасности основанная на нейросети. Нейросеть получает входные данные (изображение лица лица), и на основе входные данных  выдает пароль.
При попытки войти в систему(или базу данных, где будет установлена защита), необходимо показать лицо и вписать пароль,
если пароль введенный пользователем совпадет с паролем выданным нейросетью, то вход разрешен, иначе запрещен.
Так как система не хранит ни какой информации о пароле( хеш пароля), то украсть его нельзя. 
Для улучшения программы можно использовать не изображение лица, а биометрические данные или данные сетчатки глаза,
что затруднит создание подделки входных данных злоумышленниками.
Существует недостаток данной системы, для добавления нового пользователя, необходимо переобучить нейросеть, что требует времени.
Может показаться, что идея не имеет смысла, так как все равно приходиться хранить веса нейросети, точно также, как если бы мы хранили хеш пароля,
но параметры нейросети можно отнести в отдельный модуль, где будут проходить вычисления.
Эта система будет похожа на "черный ящик", где мы подаем какие то значения и получаем выходные значения.
Или можно использовать аналоговые вычислительные системы для нейросети, где все параметры будут регулироваться с помощью напряжения и проводимости,
т.е. будет находится на уровне "электричества", а доступ к энергоснабжение, регулируется другими системами безопасности.

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------
Для создание модели, необходимо  клонировать репозиторий, добавить интерпретатор Python (Python 3.7),
из файла config.txt выполнить команды по установке необходимы библиотек
и заполнить его необходимыми данными. После чего запустить файл training.py и ждать завершения программы (для обучающей выборки из 1000 фото и 500 циклов, 
понадобилось около 3-4 часов. Полученная точность получилась около 8*10^(-8)). 
После обучения будет получено два файла, модель  наилучшем показателем и последняя(для продолжения обучения(в случае необходимости)).
Когда модель будет получена, можно будет проверить ее работа способность запустив release2.py,
где откроется окно, для создания изображения (для сохранения необходимо нажать "q"), Будет выведено "Yes" в случае получения доступа и "No" в случае отказа.
Для примера я создал нейросеть ключом к которой стал известный актер, а пароль 132456. Размер изображения 322x460. Наилучшая модель находится в папке model7,
а последняя в model7_dop, ее нужно использовать для улучшения точности.
